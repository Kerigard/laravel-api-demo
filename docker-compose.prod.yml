services:
    nginx:
        build:
            context: .
            dockerfile: ./.docker/nginx/Dockerfile
        depends_on:
            app:
                condition: service_started
        ports:
            - ${APP_PORT:-80}:80
        restart: unless-stopped

    app:
        build:
            context: .
            dockerfile: ./.docker/app/Dockerfile
            target: production
        volumes:
            - storage:/var/www/html/storage
            - .env:/var/www/html/.env
        depends_on:
            pgsql:
                condition: service_healthy
            redis:
                condition: service_healthy
        restart: unless-stopped

    pgsql:
        image: postgres:17-alpine
        environment:
            POSTGRES_DB: ${DB_DATABASE:-laravel}
            POSTGRES_USER: ${DB_USERNAME:-root}
            POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
        volumes:
            - pgsql:/var/lib/postgresql/data
        healthcheck:
            test: pg_isready -q -d ${DB_DATABASE:-laravel} -U ${DB_USERNAME:-root}
            retries: 3
            timeout: 5s
        ports:
            - ${FORWARD_DB_PORT:-5432}:5432
        restart: unless-stopped

    redis:
        image: redis:7-alpine
        command: --requirepass ${REDIS_PASSWORD:-secret}
        environment:
            REDISCLI_AUTH: ${REDIS_PASSWORD:-secret}
        volumes:
            - redis:/data
        healthcheck:
            test: redis-cli ping
            retries: 3
            timeout: 5s
        ports:
            - ${FORWARD_REDIS_PORT:-6379}:6379
        restart: unless-stopped

volumes:
    storage:
    pgsql:
    redis:
